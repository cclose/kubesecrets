name: Prepare Release

on:
  push:
    branches:
      - main

jobs:
  prepare-release:
    if: >-
      !startsWith(github.ref, 'refs/heads/release/')
    name: Create Release PR from Main
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Determine Bump Level from Commits
        id: bump_level
        run: |
          COMMITS=$(git log ${{ steps.get_tag.outputs.tag }}..HEAD --pretty=format:"%s")
          echo "$COMMITS" > commits.txt

          if grep -q '\[semver:skip\]' commits.txt; then
            echo "skip=true" >> $GITHUB_OUTPUT
          elif grep -q '\[semver:major\]' commits.txt; then
            echo "bump=major" >> $GITHUB_OUTPUT
          elif grep -q '\[semver:minor\]' commits.txt; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump Version Accordingly
        id: bump
        run: |
          OLD_TAG=${{ steps.get_tag.outputs.tag }}
          OLD_VER=${OLD_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_VER"

          case "${{ steps.bump_level.outputs.bump }}" in
            major)
              NEW_TAG="v$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_TAG="v$MAJOR.$((MINOR + 1)).0"
              ;;
            patch|*)
              NEW_TAG="v$MAJOR.$MINOR.$((PATCH + 1))"
              ;;
          esac

          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create Release Branch and PR
        if: steps.bump_level.outputs.skip != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -b release/${{ steps.bump.outputs.new_tag }}

          echo "## ${{ steps.bump.outputs.new_tag }} - $(date +'%Y-%m-%d')" | cat - CHANGELOG.md > TEMP && mv TEMP CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for ${{ steps.bump.outputs.new_tag }}"
          git push origin release/${{ steps.bump.outputs.new_tag }}

          gh pr create \
            --title "Release ${{ steps.bump.outputs.new_tag }} [semver:${{ steps.bump_level.outputs.bump }}]" \
            --body "Automated release PR generated by GitHub Actions." \
            --base main \
            --head release/${{ steps.bump.outputs.new_tag }}
